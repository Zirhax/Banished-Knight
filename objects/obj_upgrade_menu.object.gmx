<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Amount of Jumps";
menu[1] = "Increase base speed";
menu[2] = "Horizontal speed";
menu[3] = "Back";

mpos = 0;

space = 64;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Currently selected
var move = 0;
move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord('W')), gamepad_button_check_pressed(0, gp_padu), 0);
move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord('S')), gamepad_button_check_pressed(0, gp_padd), 0);

if(move != 0)
{
    mpos += move;
    if(mpos &lt; 0)
    {
        mpos = array_length_1d(menu) - 1;
    }
    if(mpos &gt; array_length_1d(menu) - 1)
    {
        mpos = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check which option is chosen
var push = max(keyboard_check_pressed(vk_enter), gamepad_button_check_pressed(0, gp_face1), keyboard_check_pressed(vk_space), 0);

if(push == 1)
{
    scr_upgrade_menu();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the menu
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt_options);
draw_set_color(c_white);

var i;
for(i = 0; i &lt; array_length_1d(menu); i++)
{
    if(i == 0)
    {
        draw_text(x + space, y + (space * i), string(menu[i]) + ": " + string(global.allowedJumps) + " Cost: " + string(global.upgradeCostJump));
    }
    else if(i == 1)
    {
        draw_text(x + space, y + (space * i), string(menu[i]) + ": " + string(global.extSpd) + " Cost: " + string(global.upgradeCostSpeed));
    }
    else if(i == 2)
    {
        draw_text(x + space, y + (space * i), string(menu[i]) + ": " + string(global.horSpd) + " Cost: " + string(global.upgradeCostHorSpd));
    }
    else
    {
        draw_text(x + space, y + (space * i), string(menu[i]));
    }
}
draw_text(room_width/4, 20, "Coins available: " + string(global.coins));
draw_sprite(spr_menuPicker, 0, x + 16, y + (mpos * space));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
